──────디버그 가능 목록──────
원하는 스테이지에서 시작
원하는 악의 정수 얻기
플레이어 최대 체력 늘리기
플레이어 최대 탄약 게이지 늘리기
방 구조 출력
무적
전투방 강제 클리어
적 움직이지 않게 하기
장애물 히트박스 보이기
FPS 표시
원하는 무기 가지고 시작하기






──────game_state == 1일때 발동되는 디버그──────
※아래는 config.py의 16번째줄:	"game_state = 0"를 1로 바꿔야지 실행됩니다.

config.py의 104번째 줄:	CURRENT_STATE = "1-1"
변경방법: "1-1"대신 "2-1", "3-2" 등등...으로 넣으세요.
결과:입력한 스테이지부터 바로 게임이 실행됩니다.

config.py의 174번째 줄:	player_score = 10000
변경방법:10000대신 100, 9999 등등...으로 넣으세요.
결과:입력한 값만큼 악의 정수를 가지고 시작합니다.

main.py의 1121번째 줄:	player_hp_max = 2000000
변경방법:2000000대신 100, 1 등등...으로 넣으세요.
결과:입력한 값이 플레이어의 최대 체력이 됩니다.

main.py의 1130번째 줄:	ammo_gauge_max = 40000
변경방법:40000 100, 1 등등...으로 넣으세요.
결과:입력한 값이 플레이어의 최대 탄약 게이지가 됩니다.


──────game_state 상관 없이 발동되는 디버그──────
main.py의 87, 859, 1798번째 줄:		world.print_grid(grid)
변경방법:"# 디버그(방 구조 출력) - " 삭제하기
결과:현재 스테이지의 맵 구조를 알려줍니다.

main.py의 1640번째 줄:	return
변경방법:그 앞의 # 떼기
결과:플레이어를 무적으로 만들어 줍니다.

main.py의 3607번째 줄:	# elif event.key == pygame.K_q:
변경방법: 3607~3652번째 줄의 # 떼기
결과:Q를 눌렀을때, 현재 전투방을 강제로 클리어 상태로 변경합니다.

main.py의 3920번째 줄:	player_pos = get_player_world_position()
변경방법:3921~3933번째 줄의 # 떼기
결과:적이 움직이지 않게 합니다. (공격 포함)

main.py의 4881번째 줄:	# for obs in obstacles_to_check:
변경방법:4881~4883번째 줄의 # 떼기
결과:모든 장애물의 히트박스가 보이게 됩니다.

main.py의 5286번째 줄:	# fps = clock.get_fps()
변경방법:5286~5288번째 줄의 # 떼기
결과:왼쪽 상단에 현재 FPS를 표시합니다.

main.py의 460번째 줄:	START_WEAPONS = [
변경방법:원하는 무기의 값 넣기
결과:원하는 무기를 가지고 시작합니다.